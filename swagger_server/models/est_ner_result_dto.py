# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EstNerResultDto(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, per: List[str]=None, org: List[str]=None, loc: List[str]=None, start: str=None, end: str=None):  # noqa: E501
        """EstNerResultDto - a model defined in Swagger

        :param per: The per of this EstNerResultDto.  # noqa: E501
        :type per: List[str]
        :param org: The org of this EstNerResultDto.  # noqa: E501
        :type org: List[str]
        :param loc: The loc of this EstNerResultDto.  # noqa: E501
        :type loc: List[str]
        :param start: The start of this EstNerResultDto.  # noqa: E501
        :type start: str
        :param end: The end of this EstNerResultDto.  # noqa: E501
        :type end: str
        """
        self.swagger_types = {
            'per': List[str],
            'org': List[str],
            'loc': List[str],
            'start': str,
            'end': str
        }

        self.attribute_map = {
            'per': 'per',
            'org': 'org',
            'loc': 'loc',
            'start': 'start',
            'end': 'end'
        }
        self._per = per
        self._org = org
        self._loc = loc
        self._start = start
        self._end = end

    @classmethod
    def from_dict(cls, dikt) -> 'EstNerResultDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EstNerResultDto of this EstNerResultDto.  # noqa: E501
        :rtype: EstNerResultDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def per(self) -> List[str]:
        """Gets the per of this EstNerResultDto.


        :return: The per of this EstNerResultDto.
        :rtype: List[str]
        """
        return self._per

    @per.setter
    def per(self, per: List[str]):
        """Sets the per of this EstNerResultDto.


        :param per: The per of this EstNerResultDto.
        :type per: List[str]
        """

        self._per = per

    @property
    def org(self) -> List[str]:
        """Gets the org of this EstNerResultDto.


        :return: The org of this EstNerResultDto.
        :rtype: List[str]
        """
        return self._org

    @org.setter
    def org(self, org: List[str]):
        """Sets the org of this EstNerResultDto.


        :param org: The org of this EstNerResultDto.
        :type org: List[str]
        """

        self._org = org

    @property
    def loc(self) -> List[str]:
        """Gets the loc of this EstNerResultDto.


        :return: The loc of this EstNerResultDto.
        :rtype: List[str]
        """
        return self._loc

    @loc.setter
    def loc(self, loc: List[str]):
        """Sets the loc of this EstNerResultDto.


        :param loc: The loc of this EstNerResultDto.
        :type loc: List[str]
        """

        self._loc = loc

    @property
    def start(self) -> str:
        """Gets the start of this EstNerResultDto.

        Starting time in ISO 8601 format  # noqa: E501

        :return: The start of this EstNerResultDto.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start: str):
        """Sets the start of this EstNerResultDto.

        Starting time in ISO 8601 format  # noqa: E501

        :param start: The start of this EstNerResultDto.
        :type start: str
        """

        self._start = start

    @property
    def end(self) -> str:
        """Gets the end of this EstNerResultDto.

        Ending time in ISO 8601 format  # noqa: E501

        :return: The end of this EstNerResultDto.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end: str):
        """Sets the end of this EstNerResultDto.

        Ending time in ISO 8601 format  # noqa: E501

        :param end: The end of this EstNerResultDto.
        :type end: str
        """

        self._end = end
